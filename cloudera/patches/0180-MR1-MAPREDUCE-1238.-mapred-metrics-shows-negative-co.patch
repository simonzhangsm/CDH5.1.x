From a38cf7071f59390d34ff833cb7855acd7ca9a4c6 Mon Sep 17 00:00:00 2001
From: Robert Joseph Evans <bobby@apache.org>
Date: Tue, 10 Apr 2012 20:14:23 +0000
Subject: [PATCH 180/795] MR1: MAPREDUCE-1238. mapred metrics shows negative count of waiting maps and reduces (tgraves via bobby)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-1@1311966 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit 15c91ff34b4bd0a53e53d3c9dfb02472d0012539)

Reason: Metrics report negative number of waiting maps and reduces
Ref: CDH-8336
Author: Sandy Ryza
(cherry picked from commit 0526b7f0bbe2d2bcfaed93dc21e13d4fd0284c48)
(cherry picked from commit f33869dd462b0a0b2876cbbe3d7f474848c0ffa7)
---
 .../org/apache/hadoop/mapred/JobInProgress.java    |   16 ++++++++++++----
 1 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/src/mapred/org/apache/hadoop/mapred/JobInProgress.java b/src/mapred/org/apache/hadoop/mapred/JobInProgress.java
index 2c82c94..e4d237c 100644
--- a/src/mapred/org/apache/hadoop/mapred/JobInProgress.java
+++ b/src/mapred/org/apache/hadoop/mapred/JobInProgress.java
@@ -749,7 +749,7 @@ public Object run() throws Exception {
     if (numMapTasks > 0) { 
       nonRunningMapCache = createCache(splits, maxLevel);
     }
-        
+
     // set the launch time
     this.launchTime = jobtracker.getClock().getTime();
 
@@ -806,12 +806,15 @@ public Object run() throws Exception {
     
     synchronized(jobInitKillStatus){
       jobInitKillStatus.initDone = true;
+
+      // set this before the throw to make sure cleanup works properly
+      tasksInited = true;
+
       if(jobInitKillStatus.killed) {
         throw new KillInterruptedException("Job " + jobId + " killed in init");
       }
     }
     
-    tasksInited = true;
     JobHistory.JobInfo.logInited(profile.getJobID(), this.launchTime, 
                                  numMapTasks, numReduceTasks);
     
@@ -3135,9 +3138,14 @@ void garbageCollect() {
       // Cancel task tracker reservation
       cancelReservedSlots();
 
+      //  Waiting metrics are incremented in JobInProgress.initTasks()
+      //  If a job gets an exception before that, we do not want to
+      //  incorrectly decrement.
+      if (tasksInited) {
+        jobtracker.getInstrumentation().decWaitingMaps(getJobID(), pendingMaps());
+        jobtracker.getInstrumentation().decWaitingReduces(getJobID(), pendingReduces());
+      }
       // Let the JobTracker know that a job is complete
-      jobtracker.getInstrumentation().decWaitingMaps(getJobID(), pendingMaps());
-      jobtracker.getInstrumentation().decWaitingReduces(getJobID(), pendingReduces());
       jobtracker.storeCompletedJob(this);
       jobtracker.finalizeJob(this);
 
-- 
1.7.0.4

