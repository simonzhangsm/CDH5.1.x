From 338356b200c910c31f030fa8f960e2422e6f8768 Mon Sep 17 00:00:00 2001
From: Tsz-wo Sze <szetszwo@apache.org>
Date: Tue, 18 Mar 2014 18:35:19 +0000
Subject: [PATCH 560/795] Add TestSnapshotNameWithInvalidCharacters.java for HDFS-6068.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579005 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit 5dc94f32313c8766f6bb2a20448831089a858640)
---
 .../TestSnapshotNameWithInvalidCharacters.java     |   87 ++++++++++++++++++++
 1 files changed, 87 insertions(+), 0 deletions(-)
 create mode 100644 hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshotNameWithInvalidCharacters.java

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshotNameWithInvalidCharacters.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshotNameWithInvalidCharacters.java
new file mode 100644
index 0000000..5e9fe29
--- /dev/null
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshotNameWithInvalidCharacters.java
@@ -0,0 +1,87 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hdfs.server.namenode.snapshot;
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.hdfs.DFSTestUtil;
+import org.apache.hadoop.hdfs.DistributedFileSystem;
+import org.apache.hadoop.hdfs.MiniDFSCluster;
+import org.apache.hadoop.ipc.RemoteException;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+public class TestSnapshotNameWithInvalidCharacters {
+  private static final long SEED = 0;
+  private static final short REPLICATION = 1;
+  private static final int BLOCKSIZE = 1024;
+
+  private static Configuration conf = new Configuration();
+  private static MiniDFSCluster cluster;
+  private static DistributedFileSystem hdfs;
+
+  private final Path dir1 = new Path("/");
+  private final String file1Name = "file1";
+  private final String snapshot1 = "a:b:c";
+  private final String snapshot2 = "a/b/c";
+
+  @Before
+  public void setUp() throws Exception {
+    cluster = new MiniDFSCluster.Builder(conf).numDataNodes(REPLICATION)
+                                              .build();
+    cluster.waitActive();
+    hdfs = cluster.getFileSystem();
+  }
+
+  @After
+  public void tearDown() throws Exception {
+    if (cluster != null) {
+      cluster.shutdown();
+      cluster = null;
+    }
+  }
+
+  @Test (timeout = 600000)
+  public void TestSnapshotWithInvalidName() throws Exception {
+
+    Path file1 = new Path(dir1,file1Name);
+    DFSTestUtil.createFile(hdfs,file1, BLOCKSIZE,REPLICATION,SEED);
+
+    hdfs.allowSnapshot(dir1);
+    try {
+        hdfs.createSnapshot(dir1, snapshot1);
+    } catch (RemoteException e) {
+    }
+  }
+
+  @Test(timeout = 60000)
+  public void TestSnapshotWithInvalidName1() throws Exception{
+    Path file1 = new Path(dir1, file1Name);
+    DFSTestUtil.createFile(hdfs, file1, BLOCKSIZE, REPLICATION, SEED);
+
+    hdfs.allowSnapshot(dir1);
+    try {
+        hdfs.createSnapshot(dir1, snapshot2);
+    } catch (RemoteException e) {
+   }
+  }
+}
+
+
-- 
1.7.0.4

